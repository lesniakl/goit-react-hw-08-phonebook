{"version":3,"file":"static/js/563.06992a71.chunk.js","mappings":"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","sources":["components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContacList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport default function Contact({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li>\n      {name}: {number}\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;\n\nexport const selectFiltered = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filterLower = filter.toLowerCase();\n    return contacts.filter(contact => {\n      const nameLower = contact.name.toLowerCase();\n      return nameLower.includes(filterLower);\n    });\n  }\n);\n","import Contact from 'components/Contact/Contact';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFiltered } from '../../redux/contacts/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFiltered);\n\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <Contact\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"nameInput\">Name</label>\n      <input\n        type=\"text\"\n        id=\"nameInput\"\n        name=\"name\"\n        // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"numberInput\">Number</label>\n      <input\n        type=\"tel\"\n        id=\"numberInput\"\n        name=\"number\"\n        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { changeFilter } from '../../redux/filter/slice';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"filterInput\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        id=\"filterInput\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </>\n  );\n}\n","import ContactList from 'components/ContacList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectLoading } from '../redux/contacts/selectors';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Contact","_ref","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","deleteContact","selectContacts","state","contacts","items","selectLoading","isLoading","selectFilter","filter","selectFiltered","createSelector","filterLower","toLowerCase","contact","includes","ContactList","useSelector","map","ContactForm","onSubmit","e","preventDefault","form","currentTarget","elements","value","some","alert","concat","newContact","addContact","reset","htmlFor","title","required","Filter","_Fragment","onChange","changeFilter","target","Contacts","useEffect","fetchContacts"],"sourceRoot":""}